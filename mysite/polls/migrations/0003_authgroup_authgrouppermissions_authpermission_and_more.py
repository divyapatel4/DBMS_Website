# Generated by Django 4.1.3 on 2022-11-21 15:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0002_alter_animal_table_alter_email_id_table_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailId',
            fields=[
                ('email', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'email_id',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobileNo',
            fields=[
                ('mobile_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'mobile_no',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('item', models.CharField(db_column='Item', max_length=200, primary_key=True, serialize=False)),
                ('rate', models.FloatField()),
            ],
            options={
                'db_table': 'price_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpeciesData',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('population', models.BigIntegerField()),
                ('trend', models.FloatField(blank=True, null=True)),
                ('male_female_ration', models.FloatField(blank=True, null=True)),
                ('birth_rate', models.IntegerField(db_column='Birth_rate')),
                ('life_expectancy', models.IntegerField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=200, null=True)),
            ],
            options={
                'db_table': 'species_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WildlifeSanctuary',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('sanctuary_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=200)),
                ('district', models.CharField(max_length=200)),
                ('budget', models.BigIntegerField()),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('weather', models.CharField(blank=True, max_length=200, null=True)),
                ('temparature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('percipitation', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'wildlife_sanctuary',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='email_id',
        ),
        migrations.DeleteModel(
            name='mobile_no',
        ),
        migrations.DeleteModel(
            name='preys_upon',
        ),
        migrations.DeleteModel(
            name='price_list',
        ),
        migrations.DeleteModel(
            name='Species_data',
        ),
        migrations.DeleteModel(
            name='wildlife_sanctuary',
        ),
        migrations.AlterModelTable(
            name='department',
            table='department',
        ),
        migrations.CreateModel(
            name='PreysUpon',
            fields=[
                ('pred_species', models.OneToOneField(db_column='pred_species', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='predator_species', serialize=False, to='polls.speciesdata')),
            ],
            options={
                'db_table': 'preys_upon',
                'managed': False,
            },
        ),
    ]
